# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '0.*' # Push events to matching 0.*, i.e. 0.1.0, 0.15.10
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "publish"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
      with:
        # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
        node-version: 12
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
        registry-url: https://registry.npmjs.org/

    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: install # will run `yarn install` command
    - uses: borales/actions-yarn@v2.0.0
      with:
        cmd: package # will run `yarn package` command

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: true
    
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: ./pai-vscode-${{ github.ref }}.vsix
        # The name of the asset you want to upload
        asset_name: pai-vscode-${{ github.ref }}.vsix
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/zip
    
    - name: Publish to vscode marketplace
      uses: lannonbr/vsce-action@2.0.0
      with:
          args: "publish -p $VSCE_TOKEN"
      env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
